name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'

env:
  UPLOAD_BUILD: true

jobs:
  platformio:
    name: PIO Tests
    strategy:
      fail-fast: false
      matrix:
        platform:
          - esp32
          # - mega2560
        os: [ubuntu-latest]
        python: [3.7,3.9]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}

      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/platformio/platformio-core/archive/develop.zip
          platformio update

      - name: Tests ${{ matrix.platform }}
        run: |
          chmod +x buildroot/bin/*
          chmod +x buildroot/tests/*
          export PATH=./buildroot/bin/:./buildroot/tests/:${PATH}
          run_tests . ${{ matrix.platform }}

      - name: Build ${{ matrix.platform }}
        id: build
        if: github.repository == 'OS-Q/T52A'
        run: |
          pio run -e ${{ matrix.platform }} -d .
          cp ./.pio/build/${{ matrix.platform }}/*.bin build/
          echo "::set-output name=status::success"

      - name: Upload
        if: steps.build.outputs.status == 'success' && env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform }}_firmware
          path: build/

  OSQ:
    name: QIO Tests
    strategy:
      fail-fast: false
      matrix:
        boards:
          - nano32
        os: [ubuntu-latest]
        python: [3.7,3.9]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install
        if: github.repository == 'OS-Q/T52A'
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/S03/releases/latest/download/S03.zip
          qio platform install https://github.com/OS-Q/P52/releases/latest/download/P52.zip

      - name: Build
        id: build
        if: success()
        run: |
          pio run -e ${{ matrix.boards }} -d . > build/log.txt
          cp ./.pio/build/${{ matrix.boards }}/*.bin build/
          echo "::set-output name=status::success"

      - name: Upload
        if: steps.build.outputs.status == 'success' && env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: T52A_${{ matrix.boards }}_firmware
          path: build/
