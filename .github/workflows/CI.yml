name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'

env:
  UPLOAD_BUILD: true

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/platformio/platformio-core/archive/develop.zip

      - name: Tests ${{ matrix.boards }}
        run: |
          chmod +x buildroot/bin/*
          chmod +x buildroot/tests/*
          export PATH=./buildroot/bin/:./buildroot/tests/:${PATH}
          run_tests . esp32


  platformio:
    name: PIO Build
    needs:
      - test
    if: success()
    strategy:
      fail-fast: false
      matrix:
        boards:
          - esp32
          - nano32
        # os: [ubuntu-latest]
        # python: [3.7,3.9]

    runs-on: ubuntu-latest #${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/platformio/platformio-core/archive/develop.zip

      - name: Build ${{ matrix.boards }}
        id: build
        if: github.repository == 'OS-Q/T52A'
        run: |
          pio run -e ${{ matrix.boards }} -d .
          cp ./.pio/build/${{ matrix.boards }}/*.bin build/
          echo "::set-output name=status::success"

      - name: Upload
        if: steps.build.outputs.status == 'success' && env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.boards }}_pio_firmware
          path: build/

  OSQ:
    name: QIO Build
    needs:
      - test
    if: success()
    strategy:
      fail-fast: false
      matrix:
        boards:
          - nano32
          - B52A
        # os: [ubuntu-latest]
        # python: [3.7,3.9]

    runs-on: ubuntu-latest # ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install
        if: github.repository == 'OS-Q/T52A'
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/S03/releases/latest/download/S03.zip
          qio platform install https://github.com/OS-Q/P52/releases/latest/download/P52.zip

      - name: Build ${{ matrix.boards }}
        id: build
        if: success()
        run: |
          qio run -e ${{ matrix.boards }} -d . > build/log.txt
          # cp ./.qio/build/${{ matrix.boards }}/*.bin build/
          echo "::set-output name=status::success"

      - name: Upload
        if: steps.build.outputs.status == 'success' && env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.boards }}_qio_firmware
          path: build/
